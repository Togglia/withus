name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile/**/VERSION'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    strategy:
      matrix:
        repo_name: [web-intro, web-home, web-join, web-login, was-intro, was-home, was-join, was-login, dev-was-intro, dev-was-home, dev-was-join, dev-was-login]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get current version from ECR
        id: get-current-version
        run: |
          echo "::set-output name=version::$(aws ecr describe-images --repository-name ${{ matrix.repo_name }} --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text || echo '')"

      - name: Get version from VERSION file
        id: get-version
        run: |
          echo "::set-output name=version::$(cat Dockerfile/${{ matrix.repo_name }}/VERSION)"

      - name: Compare versions
        id: compare-versions
        run: |
          if [ "${{ steps.get-current-version.outputs.version }}" != "${{ steps.get-version.outputs.version }}" ]; then
            echo "Versions are different. Proceeding with deployment"
            echo "::set-output name=changed::true"
          else
            echo "Versions are the same. Skipping deployment."
            exit 0
          fi

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        if: steps.compare-versions.outputs.changed == 'true'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ matrix.repo_name }}
          IMAGE_TAG: ${{ steps.get-version.outputs.version }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile/${{ matrix.repo_name }}/Dockerfile Dockerfile/${{ matrix.repo_name }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update Helm values.yaml for web repositories
        if: steps.compare-versions.outputs.changed == 'true' && startsWith(matrix.repo_name, 'web-')
        run: |
          yq e '.image.tag = "${{ steps.get-version.outputs.version }}"' -i PRD/HELM/web-helm/values.yaml

      - name: Update Helm values.yaml for was repositories
        if: steps.compare-versions.outputs.changed == 'true' && startsWith(matrix.repo_name, 'was-')
        run: |
          yq e '.image.tag = "${{ steps.get-version.outputs.version }}"' -i PRD/HELM/was-helm/values.yaml

      - name: Commit and push changes
        if: steps.compare-versions.outputs.changed == 'true'
        run: |
          git config --global user.name 'Togglia'
          git config --global user.email 'hsoo0720@naver.com'
          git add PRD/HELM/**/values.yaml
          git commit -m "Update image tag for ${{ matrix.repo_name }} to ${{ steps.get-version.outputs.version }}"
          git push
