name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - '**/VERSION'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    strategy:
      matrix:
        repo_name: [web-intro, web-home, web-login, web-join, was-intro, was-home, was-login, was-join]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}          
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Check if VERSION has changed
      id: check-version
      run: |
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'VERSION' || exit 78

    - name: Login to Amazon ECR
      id: login-ecr
      if: steps.check-version.run == '' # Only login if VERSION has changed
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get version from VERSION file
      id: get-version
      if: steps.check-version.run == '' # Only proceed if VERSION has changed
      run: |
        VERSION=$(cat Dockerfile/${{ matrix.repo_name }}/VERSION)
        echo "::set-output name=version::$VERSION"

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      if: steps.check-version.run == '' # Only proceed if VERSION has changed
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ matrix.repo_name }}
        IMAGE_TAG: ${{ steps.get-version.outputs.version }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile/${{ matrix.repo_name }}/Dockerfile Dockerfile/${{ matrix.repo_name }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
