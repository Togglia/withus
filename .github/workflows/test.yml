name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile/**/VERSION'

env:
  AWS_REGION: ap-northeast-2
  workflows:
    - name: web-login
      repository: web-login
    - name: web-join
      repository: web-join
    - name: was-intro
      repository: was-intro
    - name: was-home
      repository: was-home

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get repository name from path
        id: get-repository-name
        run: |
          WORKFLOW=$(echo "${{ github.event_path }}" | awk -F/ '{print $2}')
          echo "::set-output name=repository::$WORKFLOW"

      - name: Get version from VERSION file
        id: get-version
        run: |
          VERSION=$(cat Dockerfile/${{ steps.get-repository-name.outputs.repository }}/VERSION)
          echo "::set-output name=version::$VERSION"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.get-version.outputs.version }}
          ECR_REPOSITORY: ${{ steps.get-repository-name.outputs.repository }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile/${ECR_REPOSITORY}/Dockerfile Dockerfile/${ECR_REPOSITORY}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
