name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile/**/VERSION'

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: ${{ github.event_name == 'push' && github.event.head_ref != 'refs/heads/main' && github.event_path | dirname | split('/') | last }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'push' && github.event.head_ref != 'refs/heads/main'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      if: startsWith(github.ref, 'refs/heads/main')

    - name: Get version from VERSION file
      id: get-version
      run: |
        VERSION=$(cat Dockerfile/web/$(basename $(dirname $GITHUB_EVENT_PATH))/VERSION)
        echo "::set-output name=version::$VERSION"

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.get-version.outputs.version }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile/web/$(basename $(dirname $GITHUB_EVENT_PATH))/Dockerfile Dockerfile/web/$(basename $(dirname $GITHUB_EVENT_PATH))
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
