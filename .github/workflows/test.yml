name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile/web/intro/VERSION'
      - 'Dockerfile/web/home/VERSION'

env:
  AWS_REGION: ap-northeast-2

jobs:
  deploy_intro:
    name: Deploy Intro
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr-intro
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get version from Intro VERSION file
        id: get-version-intro
        run: |
          VERSION=$(cat Dockerfile/web/intro/VERSION)
          echo "::set-output name=version::$VERSION"

      - name: Build, tag, and push Intro image to Amazon ECR
        id: build-image-intro
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-intro.outputs.registry }}
          ECR_REPOSITORY: web-intro
          IMAGE_TAG: ${{ steps.get-version-intro.outputs.version }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile/web/intro/Dockerfile Dockerfile/web/intro
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy_home:
    name: Deploy Home
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr-home
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get version from Home VERSION file
        id: get-version-home
        run: |
          VERSION=$(cat Dockerfile/web/home/VERSION)
          echo "::set-output name=version::$VERSION"

      - name: Build, tag, and push Home image to Amazon ECR
        id: build-image-home
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-home.outputs.registry }}
          ECR_REPOSITORY: web-home
          IMAGE_TAG: ${{ steps.get-version-home.outputs.version }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile/web/home/Dockerfile Dockerfile/web/home
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
