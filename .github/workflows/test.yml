name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - '**/VERSION'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  

    - name: Determine if VERSION file changed
      id: version-changed
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "Dockerfile/${{ matrix.repo_name }}/VERSION"; then
          echo "VERSION file changed"
          echo "::set-output name=changed::true"
        else
          echo "VERSION file not changed"
          echo "::set-output name=changed::false"
        fi

      
    - name: Get version from VERSION file
      id: get-version
      if: steps.version-changed.outputs.changed == 'true'
      run: |
        VERSION=$(cat Dockerfile/${{ matrix.repo_name }}/VERSION)
        echo "::set-output name=version::$VERSION"
    
    - name: Login to Amazon ECR
      id: login-ecr
      if: steps.version-changed.outputs.changed == 'true'
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      if: steps.version-changed.outputs.changed == 'true'
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ matrix.repo_name }}
        IMAGE_TAG: ${{ steps.get-version.outputs.version }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile/${{ matrix.repo_name }}/Dockerfile Dockerfile/${{ matrix.repo_name }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
