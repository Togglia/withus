name: Dockerizing to Amazon ECR

on:
  push:
    branches:
      - main
    paths:
      - '**/VERSION'

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORIES: |
    web-intro
    web-home
    web-login
    web-join
    was-intro
    was-home
    was-login
    was-join

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-images
        run: |
          for REPO in $ECR_REPOSITORIES; do
            DOCKERFILE_PATH="Dockerfile/${REPO}/$(basename $REPO)"
            VERSION_PATH="${DOCKERFILE_PATH}/VERSION"
            VERSION=$(cat $VERSION_PATH)
            docker build -t ${{ steps.login-ecr.outputs.registry }}/${REPO}:${VERSION} -f ${DOCKERFILE_PATH}/Dockerfile ${DOCKERFILE_PATH}
            docker push ${{ steps.login-ecr.outputs.registry }}/${REPO}:${VERSION}
            echo "::set-output name=image-${REPO}::${{ steps.login-ecr.outputs.registry }}/${REPO}:${VERSION}"
          done
